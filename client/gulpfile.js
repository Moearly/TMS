// Generated by CoffeeScript 1.10.0
(function() {
  var browserSync, del, gulp, miniCss, runSequence, uglify, uncss;

  gulp = require('gulp');

  del = require('del');

  uglify = require('uglify');

  miniCss = require('gulp-minify-css');

  uncss = require('gulp-uncss');

  runSequence = require('run-sequence');

  browserSync = require('browser-sync').create();

  gulp.task('default', function(callback) {
    return runSequence(['clean'], ['build'], ['serve', 'watch'], callback);
  });

  gulp.task('clean', function(callback) {
    return del(['./dist/'], callback);
  });

  gulp.task('build', function(callback) {
    return runSequence(['copy', 'miniJs', 'miniCss'], callback);
  });

  gulp.task('copy', function() {
    return gulp.src('./src/**/*.*').pipe(gulp.dest('./dist/'));
  });

  gulp.task('miniJs', function() {
    return gulp.src('./src/**/*.js').pipe(uglify()).pipe(gulp.dest('./dist/'));
  });

  gulp.task('miniCss', function() {
    return gulp.src('./src/**/*.css').pipe(minifyCss()).pipe(gulp.dest('./dist/'));
  });

  gulp.task('concat', function() {
    return gulp.src('./src/*.js').pipe(concat('all.js', {
      newLine: ';\n'
    })).pipe(gulp.dest('./dist/'));
  });

  gulp.task('serve', function() {
    return browserSync.init({
      server: {
        baseDir: './dist/'
      },
      port: 7411
    });
  });

  gulp.task('watch', function() {
    return gulp.watch('./src/**/*.*', ['reload']);
  });

  gulp.task('reload', function(callback) {
    return runSequence(['build'], ['reload-browser'], callback);
  });

  gulp.task('reload-browser', function() {
    return browserSync.reload();
  });

  gulp.task();

}).call(this);

//# sourceMappingURL=gulpfile.js.map
